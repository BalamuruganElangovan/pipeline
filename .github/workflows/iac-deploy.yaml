name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: ${{secrets.AWS_REGION}}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.7
   
    # Check for terraform version and status
    - name: Terraform Version
      run: terraform -version

    - name: Install Terragrunt v0.26.4
      run: |
        sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.43.1/terragrunt_linux_amd64"
        sudo chmod +x /bin/terragrunt

    # Check for terragrunt version and status
    - name: Terragrunt Version
      run: terragrunt -v

    # # Checks that all Terraform configuration files adhere to a canonical format
    # - name: Terraform Format
    #   run: |
    #       cd prod-account/ap-southeast-1/sample-app/s3-bucket/
    #       terragrunt plan --terragrunt-debug --terragrunt-log-level debug

    # Checks that all Terraform init and setting up the backend
    - name: Terraform init
      run: |
          cd prod-account/ap-southeast-1/sample-app/s3-bucket/
          terragrunt init -reconfigure

    # Checks that all Terraform plan and getting the consolidate of deployment.
    - name: Terraform plan
      run: |
          cd prod-account/ap-southeast-1/sample-app/s3-bucket/
          terragrunt plan

    # Checks that all Terraform apply and deploying .
    - name: Terraform apply
      run: |
          cd prod-account/ap-southeast-1/sample-app/s3-bucket/
          terragrunt apply

    # Checks that all Terraform configuration files valid
    # - name: Terraform Validate
    #   run: terragrunt plan --terragrunt-debug --terragrunt-log-level debug
    # # Generates an execution plan for Terraform
    # - name: Terraform Plan
    #   run: terraform plan -input=false

    #   # On push to "main", build or change infrastructure according to Terraform configuration files
    #   # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
    #   run: terraform apply -auto-approve -input=false